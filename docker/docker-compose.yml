version: '3.8'

services:
  # MCP Browser Control Server
  mcp-browser-control:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: mcp-browser-control
    ports:
      - "${MCP_PORT:-3000}:3000"
      - "${DEBUG_PORT:-9222}:9222" # Chrome debugging port
    environment:
      - NODE_ENV=production
      - BROWSER_TYPE=chrome
      - HEADLESS=true
      - MAX_CONCURRENT_SESSIONS=${MAX_SESSIONS:-10}
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-600000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=/app/logs/mcp-browser-control.log
      - REDIS_URL=redis://redis:6379
      - PROMETHEUS_ENABLED=true
      - SELENIUM_GRID_URL=${SELENIUM_GRID_URL:-}
      - AUTH_ENABLED=${AUTH_ENABLED:-false}
      - CHROME_FLAGS=--no-sandbox --disable-dev-shm-usage --disable-gpu --remote-debugging-port=9222
    volumes:
      - mcp-logs:/app/logs
      - mcp-cache:/app/cache
      - /dev/shm:/dev/shm # Shared memory for Chrome
    depends_on:
      - redis
      - prometheus
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - mcp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network
    restart: unless-stopped

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - mcp-network
    restart: unless-stopped

  # Selenium Grid Hub (optional)
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: selenium-hub
    ports:
      - "${SELENIUM_HUB_PORT:-4444}:4444"
    environment:
      - GRID_MAX_SESSION=${GRID_MAX_SESSION:-50}
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
      - GRID_NEW_SESSION_WAIT_TIMEOUT=60
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - selenium-grid

  # Chrome nodes for Selenium Grid
  chrome-node:
    image: selenium/node-chrome:4.15.0
    container_name: chrome-node
    environment:
      - HUB_HOST=selenium-hub
      - NODE_MAX_INSTANCES=${CHROME_INSTANCES:-3}
      - NODE_MAX_SESSION=${CHROME_SESSIONS:-3}
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - selenium-grid
    deploy:
      replicas: ${CHROME_REPLICAS:-2}

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - mcp-browser-control
    networks:
      - mcp-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  mcp-logs:
  mcp-cache:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  mcp-network:
    driver: bridge